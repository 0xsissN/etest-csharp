// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20250725191736_m40")]
    partial class m40
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Aptitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Aptitudes");
                });

            modelBuilder.Entity("Backend.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Aptitud_id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Aptitud_id");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("Backend.Models.CarreraTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Carrera_id")
                        .HasColumnType("int");

                    b.Property<int?>("Test_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Carrera_id");

                    b.HasIndex("Test_id");

                    b.ToTable("CarreraTests");
                });

            modelBuilder.Entity("Backend.Models.Colegio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colegios");
                });

            modelBuilder.Entity("Backend.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("Backend.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido_Materno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_Paterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("Fecha_Nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("Backend.Models.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Colegio_id")
                        .HasColumnType("int");

                    b.Property<int?>("Curso_id")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("Estudiante_ci")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Colegio_id");

                    b.HasIndex("Curso_id");

                    b.HasIndex("Estudiante_ci");

                    b.HasIndex("Usuario_id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Backend.Models.Carrera", b =>
                {
                    b.HasOne("Backend.Models.Aptitud", "Aptitud")
                        .WithMany()
                        .HasForeignKey("Aptitud_id");

                    b.Navigation("Aptitud");
                });

            modelBuilder.Entity("Backend.Models.CarreraTest", b =>
                {
                    b.HasOne("Backend.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("Carrera_id");

                    b.HasOne("Backend.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("Test_id");

                    b.Navigation("Carrera");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Backend.Models.Test", b =>
                {
                    b.HasOne("Backend.Models.Colegio", "Colegio")
                        .WithMany()
                        .HasForeignKey("Colegio_id");

                    b.HasOne("Backend.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("Curso_id");

                    b.HasOne("Backend.Models.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("Estudiante_ci");

                    b.HasOne("Backend.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Usuario_id");

                    b.Navigation("Colegio");

                    b.Navigation("Curso");

                    b.Navigation("Estudiante");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
